{"version":3,"sources":["components/HomePage.tsx","components/NotFoundPage.tsx","api/users.ts","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","NoTFoundPage","users","a","fetch","response","ok","Error","status","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","peopleFromServer","style","borderCollapse","map","user","slug","PeoplePage","useState","setPeopleFromServer","useEffect","then","usersFromServer","newUsers","userFromServer","newUserFromServer","father","find","mother","App","className","to","type","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"kOAEaA,EAAqB,kBAChC,2CCDWC,EAAyB,kBACpC,mCACE,mD,+CCJSC,EAAK,uCAAG,4BAAAC,EAAA,sEACIC,MAAM,qEADV,WACbC,EADa,QAGLC,GAHK,sBAIX,IAAIC,MAAJ,iBAAoBF,EAASG,SAJlB,gCAOZH,EAASI,QAPG,2CAAH,qDCELC,EAC8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1CC,EACED,EADFC,KAAMC,EACJF,EADIE,IAAKC,EACTH,EADSG,KAAMC,EACfJ,EADeI,KAAMC,EACrBL,EADqBK,WAAYC,EACjCN,EADiCM,WAGrC,OACE,+BACE,6BAAKL,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,QCZEC,EAC0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACrD,wBAAOC,MAAO,CAAEC,eAAgB,YAAhC,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGF,EAAiBG,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAA2BZ,OAAQY,GAAnBA,EAAKC,eCdhBC,EAAuB,WAClC,MAAgDC,mBAA+B,IAA/E,mBAAOP,EAAP,KAAyBQ,EAAzB,KAwBA,OAtBAC,qBAAU,WACR1B,IAAQ2B,MAAK,SAAAC,GACX,IAAMC,EAAW,YAAID,GAAiBR,KAAI,SAACU,GACzC,IAAMC,EAAiB,eAAQD,GACvBf,EAA2Be,EAA3Bf,WAAYD,EAAegB,EAAfhB,WAEdkB,EAASJ,EACZK,MAAK,SAACxB,GAAD,OAAgCA,EAAOC,OAASK,MAAeA,EAEjEmB,EAASN,EACZK,MAAK,SAACxB,GAAD,OAAgCA,EAAOC,OAASI,MAAeC,EAKvE,OAHAgB,EAAkBC,OAASA,EAC3BD,EAAkBG,OAASA,EAEpBH,KAGT,OAAON,EAAoBI,QAE5B,IAGD,qCACE,4CACA,cAAC,EAAD,CAAaZ,iBAAkBA,QCWtBkB,EAlCO,kBACpB,sBAAKC,UAAU,MAAf,UACE,iCACE,8BACE,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,wBACEC,KAAK,SACLF,UAAU,+BAFZ,oBAOF,cAAC,IAAD,CAAMC,GAAG,SAAT,SACE,wBACEC,KAAK,SACLF,UAAU,+BAFZ,4BAWR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACJ,GAAG,YAC9C,cAAC,IAAD,CAAOE,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aChC/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.38cc2de3.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1>\n    HomePage\n  </h1>\n);\n","import React from 'react';\n\nexport const NoTFoundPage: React.FC = () => (\n  <>\n    <h1>Page not found</h1>\n  </>\n);\n","export const users = async () => {\n  const response = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status}`);\n  }\n\n  return response.json();\n};\n","import React from 'react';\n\nexport const PersonRow:\nReact.FC<{ person: UserFromServerType }> = ({ person }) => {\n  const {\n    name, sex, born, died, motherName, fatherName,\n  } = person;\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName}</td>\n      <td>{fatherName}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable:\nReact.FC<{ peopleFromServer: UserFromServerType[] }> = ({ peopleFromServer }) => (\n  <table style={{ borderCollapse: 'collapse' }}>\n    <thead>\n      <tr>\n        <td>Name</td>\n        <td>Sex</td>\n        <td>born</td>\n        <td>died</td>\n        <td>mother</td>\n        <td>father</td>\n      </tr>\n    </thead>\n    <tbody>\n      {peopleFromServer.map((user: UserFromServerType) => (\n        <PersonRow key={user.slug} person={user} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { users } from '../api/users';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<UserFromServerType[]>([]);\n\n  useEffect(() => {\n    users().then(usersFromServer => {\n      const newUsers = [...usersFromServer].map((userFromServer) => {\n        const newUserFromServer = { ...userFromServer };\n        const { fatherName, motherName } = userFromServer;\n\n        const father = usersFromServer\n          .find((person: UserFromServerType) => person.name === fatherName) || fatherName;\n\n        const mother = usersFromServer\n          .find((person: UserFromServerType) => person.name === motherName) || fatherName;\n\n        newUserFromServer.father = father;\n        newUserFromServer.mother = mother;\n\n        return newUserFromServer;\n      });\n\n      return setPeopleFromServer(newUsers);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>PeoplePage</h1>\n      <PeopleTable peopleFromServer={peopleFromServer} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NoTFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <header>\n      <div>\n        <nav>\n          <Link to=\"/\">\n            <button\n              type=\"button\"\n              className=\"waves-effect waves-light btn\"\n            >\n              Home\n            </button>\n          </Link>\n          <Link to=\"/table\">\n            <button\n              type=\"button\"\n              className=\"waves-effect waves-light btn\"\n            >\n              table\n            </button>\n          </Link>\n        </nav>\n      </div>\n    </header>\n\n    <Routes>\n      <Route path=\"/home\" element={<HomePage />} />\n      <Route path=\"/\" element={<Navigate replace to=\"/home\" />} />\n      <Route path=\"table\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NoTFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import { BrowserRouter } from 'react-router-dom';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}